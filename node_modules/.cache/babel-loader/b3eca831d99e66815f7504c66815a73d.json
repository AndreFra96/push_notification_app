{"remainingRequest":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/thread-loader/dist/cjs.js!/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/babel-loader/lib/index.js!/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/src/components/GroupNotificationForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/src/components/GroupNotificationForm.vue","mtime":1623787329093},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2FuZHJlYWJyaW9zY2hpL0Rlc2t0b3AvcHJvZ2V0dG8gVExXL3B1c2gtbm90aWZpY2F0aW9uLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJHcm91c05vdGlmaWNhdGlvbkZyb20iLAogIHByb3BzOiBbImdyb3VwSWQiXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaWQ6IHRoaXMuZ3JvdXBJZCwKICAgICAgdGl0bGU6ICIiLAogICAgICBib2R5OiAiIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbmROb3RpZmljYXRpb246IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zZW5kTm90aWZpY2F0aW9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBhY2Nlc3NUb2tlbjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRhdXRoLmdldFRva2VuU2lsZW50bHkoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDM7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRodHRwLnBvc3QoImh0dHBzOi8vcHVzaC1hcGkuaGVyb2t1YXBwLmNvbS9tZXNzYWdlcy9ncm91cCIsIHsKICAgICAgICAgICAgICAgICAgZ3JvdXA6IHRoaXMuaWQsCiAgICAgICAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLAogICAgICAgICAgICAgICAgICBib2R5OiB0aGlzLmJvZHkKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQoYWNjZXNzVG9rZW4pCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7IC8vICAgdGhpcy5hcGlNZXNzYWdlID0gYEVycm9yOiB0aGUgc2VydmVyIHJlc3BvbmRlZCB3aXRoICcke2UucmVzcG9uc2Uuc3RhdHVzfTogJHtlLnJlc3BvbnNlLnN0YXR1c1RleHR9J2A7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzLCBbWzMsIDhdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHNlbmROb3RpZmljYXRpb24oKSB7CiAgICAgICAgcmV0dXJuIF9zZW5kTm90aWZpY2F0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzZW5kTm90aWZpY2F0aW9uOwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["GroupNotificationForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,KAAA,EAAA,CAAA,SAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,EAAA,EAAA,KAAA,OADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,KAAA,CAAA,gBAAA,EAFA;;AAAA;AAEA,gBAAA,WAFA;AAAA;AAAA;AAAA,uBAIA,KAAA,KAAA,CAAA,IAAA,CACA,+CADA,EAEA;AACA,kBAAA,KAAA,EAAA,KAAA,EADA;AAEA,kBAAA,KAAA,EAAA,KAAA,KAFA;AAGA,kBAAA,IAAA,EAAA,KAAA;AAHA,iBAFA,EAOA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,mBAAA,WAAA;AADA;AADA,iBAPA,CAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBA,gBAAA,OAAA,CAAA,KAAA,cAlBA,CAmBA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAVA,CAAA","sourcesContent":["<template>\n  <form id=\"GroupNotificationForm\" style=\"margin-bottom: 4rem\">\n    <div class=\"form-group\">\n      <label for=\"message-title\">Titolo</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        id=\"message-title\"\n        aria-describedby=\"title-hint\"\n        placeholder=\"Titolo della notifica\"\n        v-model=\"title\"\n      />\n      <small id=\"title-hint\" class=\"form-text text-muted\"\n        >E' possibile utilizzare le keywords sia nel titolo che nel corpo della\n        notifica.</small\n      >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"message-body\">Corpo</label>\n      <textarea\n        type=\"text\"\n        class=\"form-control\"\n        id=\"message-body\"\n        placeholder=\"Corpo della notifica\"\n        v-model=\"body\"\n      >\n      </textarea>\n    </div>\n    <button\n      type=\"button\"\n      @click=\"sendNotification\"\n      class=\"btn btn-primary rounded\"\n    >\n      Invia Notifica\n    </button>\n  </form>\n</template>\n<script>\nexport default {\n  name: \"GrousNotificationFrom\",\n  props: [\"groupId\"],\n  data: function () {\n    return {\n      id: this.groupId,\n      title: \"\",\n      body: \"\",\n    };\n  },\n  methods: {\n    async sendNotification() {\n      const accessToken = await this.$auth.getTokenSilently();\n      try {\n        await this.$http.post(\n          \"https://push-api.herokuapp.com/messages/group\",\n          {\n            group: this.id,\n            title: this.title,\n            body: this.body,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          }\n        );\n      } catch (e) {\n        console.error(e);\n        //   this.apiMessage = `Error: the server responded with '${e.response.status}: ${e.response.statusText}'`;\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}