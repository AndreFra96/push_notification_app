{"remainingRequest":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/src/components/GroupNotificationForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/src/components/GroupNotificationForm.vue","mtime":1623787329093},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiR3JvdXNOb3RpZmljYXRpb25Gcm9tIiwKICBwcm9wczogWyJncm91cElkIl0sCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgaWQ6IHRoaXMuZ3JvdXBJZCwKICAgICAgdGl0bGU6ICIiLAogICAgICBib2R5OiAiIiwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBzZW5kTm90aWZpY2F0aW9uKCkgewogICAgICBjb25zdCBhY2Nlc3NUb2tlbiA9IGF3YWl0IHRoaXMuJGF1dGguZ2V0VG9rZW5TaWxlbnRseSgpOwogICAgICB0cnkgewogICAgICAgIGF3YWl0IHRoaXMuJGh0dHAucG9zdCgKICAgICAgICAgICJodHRwczovL3B1c2gtYXBpLmhlcm9rdWFwcC5jb20vbWVzc2FnZXMvZ3JvdXAiLAogICAgICAgICAgewogICAgICAgICAgICBncm91cDogdGhpcy5pZCwKICAgICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsCiAgICAgICAgICAgIGJvZHk6IHRoaXMuYm9keSwKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzVG9rZW59YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICApOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgICAgICAvLyAgIHRoaXMuYXBpTWVzc2FnZSA9IGBFcnJvcjogdGhlIHNlcnZlciByZXNwb25kZWQgd2l0aCAnJHtlLnJlc3BvbnNlLnN0YXR1c306ICR7ZS5yZXNwb25zZS5zdGF0dXNUZXh0fSdgOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["GroupNotificationForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupNotificationForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <form id=\"GroupNotificationForm\" style=\"margin-bottom: 4rem\">\n    <div class=\"form-group\">\n      <label for=\"message-title\">Titolo</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        id=\"message-title\"\n        aria-describedby=\"title-hint\"\n        placeholder=\"Titolo della notifica\"\n        v-model=\"title\"\n      />\n      <small id=\"title-hint\" class=\"form-text text-muted\"\n        >E' possibile utilizzare le keywords sia nel titolo che nel corpo della\n        notifica.</small\n      >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"message-body\">Corpo</label>\n      <textarea\n        type=\"text\"\n        class=\"form-control\"\n        id=\"message-body\"\n        placeholder=\"Corpo della notifica\"\n        v-model=\"body\"\n      >\n      </textarea>\n    </div>\n    <button\n      type=\"button\"\n      @click=\"sendNotification\"\n      class=\"btn btn-primary rounded\"\n    >\n      Invia Notifica\n    </button>\n  </form>\n</template>\n<script>\nexport default {\n  name: \"GrousNotificationFrom\",\n  props: [\"groupId\"],\n  data: function () {\n    return {\n      id: this.groupId,\n      title: \"\",\n      body: \"\",\n    };\n  },\n  methods: {\n    async sendNotification() {\n      const accessToken = await this.$auth.getTokenSilently();\n      try {\n        await this.$http.post(\n          \"https://push-api.herokuapp.com/messages/group\",\n          {\n            group: this.id,\n            title: this.title,\n            body: this.body,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          }\n        );\n      } catch (e) {\n        console.error(e);\n        //   this.apiMessage = `Error: the server responded with '${e.response.status}: ${e.response.statusText}'`;\n      }\n    },\n  },\n};\n</script>\n"]}]}