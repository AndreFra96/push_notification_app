{"remainingRequest":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/src/components/GroupEditForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/src/components/GroupEditForm.vue","mtime":1624096297223},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreabrioschi/Desktop/progetto TLW/push-notification-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiR3JvdXBFZGl0Rm9ybSIsCiAgcHJvcHM6IFsiZ3JvdXBJZCJdLAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIGlkOiB0aGlzLmdyb3VwSWQsCiAgICAgIHRpdGxlOiAiIiwKICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICBxdWVyeTogIiIsCiAgICAgIGxvYWRpbmc6IHRydWUsCiAgICB9OwogIH0sCiAgYXN5bmMgY3JlYXRlZCgpIHsKICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gYXdhaXQgdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCk7CiAgICB0cnkgewogICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KAogICAgICAgICJodHRwczovL3B1c2gtYXBpLmhlcm9rdWFwcC5jb20vZ3JvdXBzLyIgKyB0aGlzLmdyb3VwSWQsCiAgICAgICAgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzVG9rZW59YCwKICAgICAgICAgIH0sCiAgICAgICAgfQogICAgICApOwogICAgICB0aGlzLnRpdGxlID0gZGF0YVsicmVzcG9uc2UiXVswXVsidGl0bGUiXTsKICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRhdGFbInJlc3BvbnNlIl1bMF1bImRlc2NyaXB0aW9uIl07CiAgICAgIHRoaXMucXVlcnkgPSBkYXRhWyJyZXNwb25zZSJdWzBdWyJxdWVyeSJdOwogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgdGhpcy5lcnJvciA9IGU7CiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICBjb25zb2xlLmVycm9yKGUpOwogICAgICAvLyAgIHRoaXMuYXBpTWVzc2FnZSA9IGBFcnJvcjogdGhlIHNlcnZlciByZXNwb25kZWQgd2l0aCAnJHtlLnJlc3BvbnNlLnN0YXR1c306ICR7ZS5yZXNwb25zZS5zdGF0dXNUZXh0fSdgOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZWRpdEdyb3VwKCkgewogICAgICAvLyAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gYXdhaXQgdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCk7CiAgICAgIGFsZXJ0KCJEQSBJTVBMRU1FTlRBUkUiKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["GroupEditForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupEditForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <form id=\"GroupEditForm\">\n    <div class=\"form-group\">\n      <label for=\"group-title\">Titolo</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"group-title\"\n        v-model=\"title\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"group-description\">Descrizione</label>\n      <textarea\n        type=\"text\"\n        class=\"form-control\"\n        id=\"group-description\"\n        v-model=\"description\"\n      >\n      </textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"group-query\">Query</label>\n      <textarea\n        type=\"text\"\n        class=\"form-control\"\n        id=\"group-query\"\n        v-model=\"query\"\n      >\n      </textarea>\n    </div>\n    <button type=\"button\" @click=\"editGroup\" class=\"btn btn-primary rounded\">\n      Salva Modifiche\n    </button>\n  </form>\n</template>\n<script>\nexport default {\n  name: \"GroupEditForm\",\n  props: [\"groupId\"],\n  data: function () {\n    return {\n      id: this.groupId,\n      title: \"\",\n      description: \"\",\n      query: \"\",\n      loading: true,\n    };\n  },\n  async created() {\n    const accessToken = await this.$auth.getTokenSilently();\n    try {\n      const { data } = await this.$http.get(\n        \"https://push-api.herokuapp.com/groups/\" + this.groupId,\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        }\n      );\n      this.title = data[\"response\"][0][\"title\"];\n      this.description = data[\"response\"][0][\"description\"];\n      this.query = data[\"response\"][0][\"query\"];\n      this.loading = false;\n    } catch (e) {\n      this.error = e;\n      this.loading = false;\n      console.error(e);\n      //   this.apiMessage = `Error: the server responded with '${e.response.status}: ${e.response.statusText}'`;\n    }\n  },\n  methods: {\n    async editGroup() {\n      //   const accessToken = await this.$auth.getTokenSilently();\n      alert(\"DA IMPLEMENTARE\");\n    },\n  },\n};\n</script>\n"]}]}